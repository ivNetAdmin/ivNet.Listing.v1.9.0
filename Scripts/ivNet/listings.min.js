var Listings = angular.module('ivNet.Listings', ['ngResource', 'trNgGrid'])
.filter("dateField", function () {
    return function (combinedFieldValueUnused, item) {
        var d = item.PaymentPackageExpiraryDate;

        var curr_date = d.substr(8, 2);
        var curr_month = d.substr(5, 2);
        var curr_year = d.substr(0, 4);

        return curr_date + "/" + curr_month + "/" + curr_year;
    };
});

Listings.factory('adminListings', function ($resource) {
    return $resource('/api/listing/adminlisting/:id', null,
    {
        'query': { method: 'GET', isArray: true },
        'update': { method: 'PUT' },
    });
});

Listings.factory('ownerListings', function ($resource) {
    return $resource('/api/listing/listing/:id', null,
    {
        'get': { method: 'GET' },
        'query': { method: 'GET', isArray: true },
        'update': { method: 'PUT' },
    });
});

Listings.factory('listingConfiguration', function ($resource) {
    return $resource('/api/listing/configuration/:id', null,
    {        
        'query': { method: 'GET', isArray: false },
    });
});

Listings.factory('listingPackages', function ($resource) {
    return $resource('/api/listing/package/:id', null,
    {
        'query': { method: 'GET', isArray: true },
    });
});

Listings.controller('ListingsController', function ($scope, $filter, $attrs,
    adminListings,
    ownerListings,
    listingConfiguration,
    listingPackages) {

    init();
    help();

    $scope.editListing = function (item) {
        clearListing();

        ownerListings.get({ id: item.Id },
          function (data) {

              //$scope.listings = data;
              $('section#listingEdit').hide("blind", { direction: "up" }, 500, function () {
                  $('section#listingTable').hide();
                  $('section#listingEdit').show();
              });
      
              $scope.package = $scope.packages[$('select#Package option[value="' + data.PackageId + '"]').index() - 1];

              $scope.package.Id = data.PackageId;
              SetPackageOptions();

              $scope.category = $scope.categories[$('select#Category option[value="' + data.CategoryId + '"]').index() - 1];
              $('input#Address1').val(data.Address1);
              $('input#Address2').val(data.Address2);
              $('input#Town').val(data.Town);
              $('input#Postcode').val(data.Postcode);                            

              if (data.PackageId > 1) {
                  $('section#listingTable').hide();
                  $('section#listingEdit').show();
              }

              $scope.strapline = unescape(data.StrapLine);
              $scope.price = unescape(data.Price);
              $scope.ownerName = data.OwnerName;
              $scope.email = data.Email;
              $scope.listingkey = data.ListingKey;
              $scope.notes = data.Notes;
              $scope.websiteurl = data.WebsiteUrl;

              $scope.description = unescape(data.Description);
              CKEDITOR.instances.DescriptionHtml.setData(unescape(data.Description));

              $.each(jQuery.parseJSON(data.Rooms), function (roomIndex, roomItem) {
                  $scope.roomType = roomItem.RoomType;
                  $scope.roomDescription = roomItem.Description;
                  $scope.addRoom();
              });               

              $.each(jQuery.parseJSON(data.Theatres), function (theatreIndex, theatreItem) {
                  $scope.theatreName = theatreItem.Name;
                  $scope.theatreTown = theatreItem.Town;
                  $scope.theatreDistance = theatreItem.Distance;
                  $scope.transport = theatreItem.Transport;
                  $scope.addTheatre();
              });

              $.each(jQuery.parseJSON(data.Tags), function (tagIndex, tagItem) {
                  $scope.tag = tagItem.Name;
                  $scope.addTag();
              });

              $.each(jQuery.parseJSON(data.Images), function (imageIndex, imageItem) {
                  $scope.fileList.push({
                      Id: ($scope.fileList.length + 1), File: imageItem.Thumb, Size: imageItem.size
                  });
                  $scope.images = angular.toJson($scope.fileList);
              });

          },
          function (error) {
              alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
          });    
    }

    $scope.deleteListing = function (item) {
        var result = confirm("Are you sure you want to delete this listing [" + item.Id + "]?");
        if (result) {

            var listingItemIndex = -1;
            $.each($scope.listings, function (listingIndex, listingItem) {
                if (listingItem.Id == item.Id) {
                    listingItemIndex = listingIndex;
                }
            });

            var data = {
                Action: "delete"
            };
            adminListings.update({ id: item.Id }, data,
            function () {
         
                $scope.listings.splice(listingItemIndex, 1);

            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
        }
    };

    $scope.authoriseListing = function(item) {

        var listingItemIndex = -1;
        $.each($scope.listings, function (listingIndex, listingItem) {
            if (listingItem.Id == item.Id) {
                listingItemIndex = listingIndex;
            }
        });       

        var data = {
            Action: item.IsVetted ? "cancel" : "authorise"
        };

        if (item.IsVetted) {
            item.IsVetted = false;
        } else {
            item.IsVetted = true;
        }

        adminListings.update({ id: item.Id }, data,
            function () {
                $scope.listings.splice(listingItemIndex, 1);
                $scope.listings.splice(listingItemIndex,0,{
                    Id: item.Id,
                    Owner: item.Owner,
                    Address: item.Address,
                    Postcode: item.Postcode,
                    PaymentPackageName: item.PaymentPackageName,
                    PaymentPackageExpiraryDate: item.PaymentPackageExpiraryDate,
                    IsVetted: item.IsVetted
                });
            },
            function(error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });

    }

    $scope.cancelSaveListing = function () {        
        $('section#listingEdit').hide();
        $('section#listingTable').show();
    };

    $scope.addListing = function() {
        clearListing();

        $('section#listingEdit').hide("blind", { direction: "up" }, 500, function() {
            $('section#listingTable').hide();
            $('section#listingEdit').show();
        });
    };

    $scope.addTheatre = function () {
        if ($scope.theatreName.length > 0) {
            $scope.theatreList.push({
                Id: ($scope.theatreList.length + 1), Name: $scope.theatreName, Town: $scope.theatreTown, Distance: $scope.theatreDistance, Transport: $scope.transport });
        }
        $scope.theatres = angular.toJson($scope.theatreList);
        $scope.theatreName = "";
        $scope.theatreTown = "";
        $scope.theatreDistance = "";
        $scope.transport = "";
    };

    $scope.addRoom = function () {
        if ($scope.roomType !== undefined) {
            $scope.roomList.push({
                Id: ($scope.roomList.length + 1), RoomType: $scope.roomType, Description: $scope.roomDescription
            });           
            $scope.rooms = angular.toJson($scope.roomList);
            $scope.roomType = "";
            $scope.roomDescription = "";
        }
    };

    $scope.addTag = function () {
        if ($scope.tag.length > 0) {
            $('input#tagList').tagsinput('add', $scope.tag);
            $scope.tag = "";
        }
    };

    $scope.removeTheatre = function(item) {
        var theatreItemIndex = -1;
        $.each($scope.theatreList, function(theatreIndex, theatreItem) {
            if (theatreIndex == item.Id - 1) {
                theatreItemIndex = theatreIndex;
            }
        });

        $scope.theatreList.splice(theatreItemIndex, 1);
        $scope.theatres = angular.toJson($scope.theatreList);
    };

    $scope.removeRoom = function (item) {      
            var roomItemIndex = -1;
            $.each($scope.roomList, function (roomIndex, roomItem) {
                if (roomIndex == item.Id - 1) {
                    roomItemIndex = roomIndex;
                }
            });

            $scope.roomList.splice(roomItemIndex, 1);
            $scope.rooms = angular.toJson($scope.roomList);
    };

    $scope.removeImage = function (item) {
        var imageItemIndex = -1;
        $.each($scope.fileList, function (imageIndex, imageItem) {
            if (imageIndex == item.Id - 1) {
                imageItemIndex = imageIndex;
            }
        });

        $scope.fileList.splice(imageItemIndex, 1);
        $scope.images = angular.toJson($scope.fileList);
    };    

    $scope.saveListing = function () {

        //encode fields
        $scope.strapline = escape($scope.strapline);
        $scope.description = escape($scope.description);
        $scope.price = escape($scope.price);

        var $form = $("form");
        var validator = $form.data("validator");     
        //!validator ||
        if (!$form.valid()) {
            e.preventDefault();
            return;
        } 

        //$('section#listingTable').hide("blind", { direction: "up" }, 500, function () {
        //    $('section#listingEdit').hide();
        //    $('section#listingTable').show();
        //});
    };

    $scope.packageOnChange = function() {
        SetPackageOptions();
    }

    function SetPackageOptions() {
        switch ($scope.package.Id) {                    
            case 1:               
                $('div#cke_DescriptionHtml').hide();
                $('textarea#Description').show();
                $('div#WebsiteUrlForm').hide();
                $('div#ImageUploadForm').hide();
                $scope.ImageAllocation = "0";
                break
            case 2:
                $('div#cke_DescriptionHtml').show();
                $('textarea#Description').hide();
                $('div#WebsiteUrlForm').show();
                $('div#ImageUploadForm').show();
                $scope.ImageAllocation = "2";
                break
            case 3:
                $('div#cke_DescriptionHtml').show();
                $('textarea#Description').hide();
                $('div#WebsiteUrlForm').show();
                $('div#ImageUploadForm').show();
                $scope.ImageAllocation = "any number";
                break
        }
    }

    function init() {
   
        $('section#listingEdit').hide();
        CKEDITOR.config.htmlEncodeOutput = true;
        CKEDITOR.replace('DescriptionHtml');

        switch ($attrs.task) {
            case "owner":
            $('div#throbber').addClass('throbber-loader');
            ownerListings.query({},
                function(data) {
                    $scope.listings = data;
                    $('div#throbber').removeClass('throbber-loader');
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                    $('div#throbber').removeClass('throbber-loader');
                });
            break;
            default:
            $('div#throbber').addClass('throbber-loader');
            adminListings.query({ id: $attrs.task },
                function(data) {
                    $scope.listings = data;
                    $('div#throbber').removeClass('throbber-loader');
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                    $('div#throbber').removeClass('throbber-loader');
                });
            break;
        }

        listingConfiguration.query({},
            function(data) {
                $scope.categories = $filter('orderBy')(data.Categories, "name");
                $scope.transportList = $filter('orderBy')(data.TransportList, "name");
                $scope.roomTypeList = $filter('orderBy')(data.RoomTypes, "name");
                $scope.tagList = $filter('orderBy')(data.TagTextList, "name");
            },

            function(error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });

        listingPackages.query({},
          function (data) {
              $scope.packages = data;
          },
          function (error) {
              alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
          });

        $('#fileupload').fileupload({
            dataType: 'json',
            url: '/owner/uploadfiles',
            autoUpload: true,
            done: function(e, data) {

                if (data.result.size.length > 0) {
                    $scope.fileList.push({
                        Id: ($scope.fileList.length + 1),
                        File: data.result.name,
                        Size: data.result.size
                    });
                }

                $scope.$apply();
                $scope.images = angular.toJson($scope.fileList);
           }
        });

        $scope.theatreList = [];
        $scope.roomList = [];
        $scope.fileList = [];

        $scope.theatreSelectedItems = [];
        $scope.roomSelectedItems = [];
        $scope.fileSelectedItems = [];
    }

    function help() {
        $scope.help_package = "Select available payment package from dropdown selection";
        $scope.help_room = "Use this section to add rooms to your listing. Select a 'Type' and a then give the room a 'Description'. Click 'Add' to add the room and description to your listing.";
        $scope.help_address = "Enter the address of room/rooms to let, including the postcode and town.";
        $scope.help_images = "Click on 'Upload file' button to upload files from your PC/Device. The ideal size would be 300px (h) by 700px (w). Any larger and the image will get cropped. Any smaller than 300px (h) will result in the image being stretched.";
        $scope.help_theatres = "Use this section to add the distances to your local theatres. Select the 'Name' of the theatre, the 'Postcode' the theatre is in and finally the 'Distance' eg '10 mins' then teh mode of 'Transport'. You can add multiple modes of transport for each theatre. Say '10 mins walking', '5 mins by car'.";
        $scope.help_tags = "Select as many relevant tags from the dropdown list as you think are relevant. Select the item and then click the 'Add Tag' button. This will help potential lodgers find your listing";
        $scope.help_description = "Use up to around 200 words to describe the letting property";
        $scope.help_website = "Enter the url of your website eg www.mysite.co.uk";
    };

    function clearListing() {
        $scope.package = "";
        $('select#Package').val("");

        $scope.category = "";
        $('select#Category').val("");
        $('input#Address1').val("");
        $('input#Address2').val("");
        $('input#Town').val("");
        $('input#Postcode').val("");

        $scope.strapline = "";
        $('input#Strapline').val("");
        $scope.price = "";
        $('input#Price').val("");

        $scope.description = "";
        $('textarea#Description').val("");
        CKEDITOR.instances.DescriptionHtml.setData("");

        $('input#Images').val("");
        $scope.images = "";
        $scope.fileList.clear();

        $('input#Rooms').val("");
        $scope.rooms = "";
        $scope.roomList.clear();

        $('input#Theatres').val("");
        $scope.theatres = "";
        $scope.theatreList.clear();

        $('input#tagList').val("");
        $scope.tag = "";

     //   $('input#Email').val("");
     //   $scope.email = "";

        $('input#ListingKey').val("");
        $scope.listingkey = "";

        $scope.websiteurl = "";
        $('input#WebsiteUrl').val("");

        $scope.notes = "";
        $('textarea#Notes').val("");
    };

});

$(document).ready(function() {
    $('[data-toggle="tooltip"]').tooltip();

    //    .on('fileuploadprogressall', function (e, data) {
    //    var progress = parseInt(data.loaded / data.total * 100, 10);
    //    $('.progress .progress-bar').css('width', progress + '%');
    //});
});

Array.prototype.clear = function () {
    this.splice(0, this.length);
};
